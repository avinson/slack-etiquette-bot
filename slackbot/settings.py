"""
Django settings for slackbot project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
if os.environ["DJANGO_ENV"] == 'production':
    DEBUG = False
else:
    DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'slackbot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'slackbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'slackbot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
if os.environ['EBOT_MYSQL_ENABLED'] == 'yes':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': os.environ['EBOT_MYSQL_DB'],
            'USER': os.environ['EBOT_MYSQL_USER'],
            'PASSWORD': os.environ['EBOT_MYSQL_PASS'],
            'HOST': os.environ['EBOT_MYSQL_HOST'],
            'PORT': os.environ['EBOT_MYSQL_PORT'],
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler'
        },
    },
    'loggers': {
        '': {  # 'catch all' loggers by referencing it with the empty string
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = False
USE_L10N = False
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

## app specific stuff
SLACK_API_TOKEN = os.environ['SLACK_API_TOKEN']
GUIDE_URL = os.environ['GUIDE_URL']
CHANNEL_MEMBER_THRESHOLD = os.environ['CHANNEL_MEMBER_THRESHOLD']
REMIND_THRESHOLD = os.environ['REMIND_THRESHOLD']
PRIVATE_NAG_THRESHOLD = os.environ['PRIVATE_NAG_THRESHOLD']
PUBLIC_NAG_THRESHOLD = os.environ['PUBLIC_NAG_THRESHOLD']

# the initial etiquette guidelines to send a user
INITIAL_TEXT = f''':wave: I'm your friendly slack etiquette bot. Since you used `@here` or `@channel` in a channel with more than {CHANNEL_MEMBER_THRESHOLD} members, I'm passing along some guidelines here: {GUIDE_URL}

Please review the guidelines and consider avoiding the use of `@here` or `@channel` when possible as this can be disruptive or annoying to other employees.

Here's some examples of when using these keywords is *not appropriate*:
* There exists leftover food in the kitchen.
* There will exist food in the kitchen sometime in the future (this is not timely enough to warrant disrupting workflow).
* You brought back some treats from your trip (thank you for your kindness but people can read scrollback for this).
* You forgot something of low value in a conference room (again, people can read the scrollback and answer your question eventually).

Thanks for reading over this and being considerate. I'll send out another friendly reminder every {REMIND_THRESHOLD} days. Cheers!'''

# text to send after a period of REMIND_THRESHOLD days to refresh the user's memory
REMIND_TEXT = f''':wave: This is a friendly reminder after {REMIND_THRESHOLD} days to review the guidelines at {GUIDE_URL} and to consider whether you _really_ need to use an `@here` or `@channel` before posting.

Here are some examples of when using these keywords is *not* appropriate:
* There exists leftover food in the kitchen.
* There will exist food in the kitchen sometime in the future (this is not timely enough to warrant disrupting workflow).
* You brought back some treats from your trip (thank you for your kindness but people can read scrollback for this).
* You forgot something of low value in a conference room (again, people can read the scrollback and answer your question eventually).

Thanks!'''

# text to DM user after they go over the PRIVATE_NAG_THRESHOLD (abuses per week)
#PRIVATE_NAG_TEXT =

# text to call out the user in the channel after they go over the PUBLIC_NAG_THRESHOLD (abuses per week)
#PUBLIC_NAG_TEXT =
